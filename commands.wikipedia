===ADMIN===
Syntax:
:<code><nowiki>ADMIN [<server>]</nowiki></code>

Instructs the server to return information about the administrator of the server specified by <server>, or the current server if target is omitted.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Admin command
| section     = 4.3.7
| page        = 31
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===AWAY===
Syntax:
:<code><nowiki>AWAY [<message>]</nowiki></code>

Provides the server with a message to automatically send in reply to a PRIVMSG directed at the user, but not to a channel they are on.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Away
| section     = 5.1
| pages       = 38{{ndash}} 39
| idanchor    = ietf
}}</ref>
If <message> is omitted, the away status is removed.

Defined in <nowiki>RFC 1459</nowiki>

===CONNECT===
Syntax:
:<code><nowiki>CONNECT <target server> [<port> [<remote server>]]</nowiki></code> (<nowiki>RFC 1459</nowiki>)
:<code><nowiki>CONNECT <target server> <port> [<remote server>]</nowiki></code> (<nowiki>RFC 2812</nowiki>)

Instructs the server <remote server> (or the current server, if <remote server> is omitted) to connect to <target server> on port <port>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Connect message
| section     = 4.3.5
| pages       = 29{{ndash}} 30
| idanchor    = ietf
}}</ref><ref>{{cite IETF
| rfc         = 2812
| sectionname = Connect message
| section     = 3.4.7
| pages       = 28{{ndash}} 29
| idanchor    = ietf
}}</ref>
This command should only be available to [[IRC Operator]]s.

Defined in <nowiki>RFC 1459</nowiki>; the <port> parameter became mandatory in <nowiki>RFC 2812</nowiki>

===DIE===
Syntax:
:<code><nowiki>DIE</nowiki></code>

Instructs the server to shut down.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Die message
| section     = 4.3
| page        = 39
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 2812</nowiki>

===ERROR===
Syntax:
:<code><nowiki>ERROR <error message></nowiki></code>

This command is for use by servers to report errors to other servers. It is also used before terminating client connections.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Error
| section     = 4.6.4
| page        = 38
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

=== INFO ===
Syntax:
:<code><nowiki>INFO [<target>]</nowiki></code>

Returns information about the <target> server, or the current server if <target> is omitted.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Info command
| section     = 4.3.8
| pages       = 31{{ndash}} 32
| idanchor    = ietf
}}</ref> Information returned includes the server's version, when it was compiled, the [[Patch (computing)|patch level]], when it was started, and any other information which may be considered to be relevant.

Defined in <nowiki>RFC 1459</nowiki>

===INVITE===
Syntax:
:<code><nowiki>INVITE <nickname> <channel></nowiki></code>

Invites <nickname> to the channel <channel>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Invite message
| section     = 4.2.7
| page        = 25
| idanchor    = ietf
}}</ref> <channel> does not have to exist, but if it does, only members of the channel are allowed to invite other clients. If the channel mode i is set, only channel operators may invite other clients.

Defined in <nowiki>RFC 1459</nowiki>

===ISON===
Syntax:
:<code><nowiki>ISON <nicknames></nowiki></code>

Queries the server to see if the clients in the space-separated list <nicknames> are currently on the network.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Ison message
| section     = 5.8
| page        = 42
| idanchor    = ietf
}}</ref> The server returns only the nicknames that are on the network in a space-separated list. If none of the clients are on the network the server returns an empty list.

Defined in <nowiki>RFC 1459</nowiki>

===JOIN===
Syntax:
:<code><nowiki>JOIN <channels> [<keys>]</nowiki></code>

Makes the client join the channels in the comma-separated list <channels>, specifying the passwords, if needed, in the comma-separated list <keys>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Join message
| section     = 4.2.1
| pages       = 19{{ndash}} 20
| idanchor    = ietf
}}</ref> If the channel(s) do not exist then they will be created.

Defined in <nowiki>RFC 1459</nowiki>

===KICK===
Syntax:
:<code><nowiki>KICK <channel> <client> [<message>]</nowiki></code>

Forcibly removes <client> from <channel>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Kick command
| section     = 4.2.8
| pages       = 25{{ndash}} 26
| idanchor    = ietf
}}</ref> This command may only be issued by channel operators.

Defined in <nowiki>RFC 1459</nowiki>

===KILL===
Syntax:
:<code><nowiki>KILL <client> <comment></nowiki></code>

Forcibly removes <client> from the network.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Kill message
| section     = 4.6.1
| page        = 36
| idanchor    = ietf
}}</ref> This command may only be issued by IRC operators.

Defined in <nowiki>RFC 1459</nowiki>

===LINKS===
Syntax:
:<code><nowiki>LINKS [<remote server> [<server mask>]]</nowiki></code>

Lists all server links matching <server mask>, if given, on <remote server>, or the current server if omitted.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Links message
| section     = 4.3.3
| pages       = 28{{ndash}} 29
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===LIST===
Syntax:
:<code><nowiki>LIST [<channels> [<server>]]</nowiki></code>

Lists all channels on the server.<ref>{{cite IETF
| rfc         = 1459
| sectionname = List message
| section     = 4.2.6
| pages       = 24{{ndash}} 25
| idanchor    = ietf
}}</ref> If the comma-separated list <channels> is given, it will return the channel topics. If <server> is given, the command will be forwarded to <server> for evaluation.

Defined in <nowiki>RFC 1459</nowiki>

===LUSERS===
Syntax:
:<code><nowiki>LUSERS [<mask> [<server>]]</nowiki></code>

Returns statistics about the size of the network.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Lusers message
| section     = 3.4.2
| pages       = 25{{ndash}} 26
| idanchor    = ietf
}}</ref> If called with no arguments, the statistics will reflect the entire network. If <mask> is given, it will return only statistics reflecting the masked subset of the network. If <target> is given, the command will be forwarded to <server> for evaluation.

Defined in <nowiki>RFC 2812</nowiki>

===MODE===
Syntax:
:<code><nowiki>MODE <nickname> <flags> (user)</nowiki></code>
:<code><nowiki>MODE <channel> <flags> [<args>]</nowiki></code>

The MODE command is dual-purpose. It can be used to set both user and channel modes.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Mode message
| section     = 4.2.3
| pages       = 21{{ndash}} 23
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===MOTD===
Syntax:
:<code><nowiki>MOTD [<server>]</nowiki></code>

Returns the message of the day on <server> or the current server if it is omitted.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Motd message
| section     = 3.4.1
| page        = 25
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 2812</nowiki>

===NAMES===
Syntax:
:<code><nowiki>NAMES [<channels>]</nowiki></code> (<nowiki>RFC 1459</nowiki>)
:<code><nowiki>NAMES [<channels> [<server>]]</nowiki></code> (<nowiki>RFC 2812</nowiki>)

Returns a list of who is on the comma-separated list of <channels>, by channel name.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Names message
| section     = 4.2.5
| page        = 24
| idanchor    = ietf
}}</ref> If <channels> is omitted, all users are shown, grouped by channel name with all users who are not on a channel being shown as part of channel "*". If <server> is specified, the command is sent to <server> for evaluation.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Names message
| section     = 3.2.5
| pages       = 20{{ndash}} 21
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>; the optional <server> parameter was added in <nowiki>RFC 2812</nowiki>

===NICK===
Syntax:
:<code><nowiki>NICK <nickname> [<hopcount>]</nowiki></code> (<nowiki>RFC 1459</nowiki>)
:<code><nowiki>NICK <nickname></nowiki></code> (<nowiki>RFC 2812</nowiki>)

Allows a client to change their IRC nickname. Hopcount is for use between servers to specify how far away a nickname is from its home server.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Nick message
| section     = 4.1.2
| pages       = 14{{ndash}} 15
| idanchor    = ietf
}}</ref><ref>{{cite IETF
| rfc         = 2812
| sectionname = Nick message
| section     = 3.1.2
| pages       = 10{{ndash}} 11
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>; the optional <hopcount> parameter was removed in <nowiki>RFC 2812</nowiki>

===NOTICE===
Syntax:
:<code><nowiki>NOTICE <msgtarget> <message></nowiki></code>

This command works similarly to PRIVMSG, except automatic replies must never be sent in reply to NOTICE messages.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Notice
| section     = 4.4.2
| page        = 33
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===OPER===
Syntax:
:<code><nowiki>OPER <username> <password></nowiki></code>

Authenticates a user as an IRC operator on that server/network.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Oper
| section     = 4.1.5
| page        = 17
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===PART===
Syntax:
:<code><nowiki>PART <channels></nowiki></code>

Causes a user to leave the channels in the comma-separated list <channels>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Part message
| section     = 4.2.2
| pages       = 20{{ndash}} 21
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===PASS===
Syntax:
:<code><nowiki>PASS <password></nowiki></code>

Sets a connection password.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Password message
| section     = 4.1.1
| page        = 14
| idanchor    = ietf
}}</ref> This command must be sent before the NICK/USER registration combination.

Defined in <nowiki>RFC 1459</nowiki>

===PING===
Syntax:
:<code><nowiki>PING <server1> [<server2>]</nowiki></code>

Tests the presence of a connection.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Ping message
| section     = 4.6.2
| page        = 37
| idanchor    = ietf
}}</ref> A PING message results in a PONG reply. If <server2> is specified, the message gets passed on to it.

Defined in <nowiki>RFC 1459</nowiki>

===PONG===
Syntax:
:<code><nowiki>PONG <server1> [<server2>]</nowiki></code>

This command is a reply to the PING command and works in much the same way.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Pong message
| section     = 4.6.3
| pages       = 37{{ndash}} 38
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===PRIVMSG===
Syntax:
:<code><nowiki>PRIVMSG <msgtarget> <message></nowiki></code>

Sends <message> to <msgtarget>, which is usually a user or channel.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Private messages
| section     = 4.4.1
| pages       = 32{{ndash}} 33
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===QUIT===
Syntax:
:<code><nowiki>QUIT [<message>]</nowiki></code>

Disconnects the user from the server.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Quit
| section     = 4.1.6
| pages       = 17{{ndash}} 18
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===REHASH===
Syntax:
:<code><nowiki>REHASH</nowiki></code>

Causes the server to re-read and re-process its configuration file(s).<ref>{{cite IETF
| rfc         = 1459
| sectionname = Rehash message
| section     = 5.2
| page        = 39
| idanchor    = ietf
}}</ref> This command can only be sent by IRC Operators.

Defined in <nowiki>RFC 1459</nowiki>

===RESTART===
Syntax:
:<code><nowiki>RESTART</nowiki></code>

Restarts a server.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Restart message
| section     = 5.3
| pages       = 39{{ndash}} 40
| idanchor    = ietf
}}</ref> It may only be sent by IRC Operators.

Defined in <nowiki>RFC 1459</nowiki>

===SERVICE===
Syntax:
:<code><nowiki>SERVICE <nickname> <reserved> <distribution> <type> <reserved> <info></nowiki></code>

Registers a new service on the network.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Service message
| section     = 3.1.6
| pages       = 13{{ndash}} 14
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 2812</nowiki>

===SERVLIST===
Syntax:
:<code><nowiki>SERVLIST [<mask> [<type>]]</nowiki></code>

Lists the services currently on the network.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Servlist message
| section     = 3.5.1
| page        = 31
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 2812</nowiki>

===SERVER===
Syntax:
:<code><nowiki>SERVER <servername> <hopcount> <info></nowiki></code>

The server message is used to tell a server that the other end of a new connection is a server.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Server message
| section     = 4.1.4
| pages       = 16{{ndash}} 17
| idanchor    = ietf
}}</ref> This message is also used to pass server data over whole net.
<hopcount> details how many hops (server connections) away <servername> is.
<info> contains addition human-readable information about the server.

Defined in <nowiki>RFC 1459</nowiki>

===SQUERY===
Syntax:
:<code><nowiki>SQUERY <servicename> <text></nowiki></code>

Identical to PRIVMSG except the recipient must be a service.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Squery
| section     = 3.5.2
| page        = 32
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 2812</nowiki>

===SQUIT===
Syntax:
:<code><nowiki>SQUIT <server> <comment></nowiki></code>

Causes <server> to quit the network.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Server quit message
| section     = 4.1.7
| pages       = 18{{ndash}} 19
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===STATS===
Syntax:
:<code><nowiki>STATS <query> [<server>]</nowiki></code>

Returns statistics about the current server, or <server> if it's specified.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Stats message
| section     = 4.3.2
| pages       = 27{{ndash}} 28
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===SUMMON===
Syntax:
:<code><nowiki>SUMMON <user> [<server>]</nowiki></code> (<nowiki>RFC 1459</nowiki>)
:<code><nowiki>SUMMON <user> [<server> [<channel>]]</nowiki></code> (<nowiki>RFC 2812</nowiki>)

Gives users who are on the same host as <server> a message asking them to join IRC.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Summon message
| section     = 5.4
| page        = 40
| idanchor    = ietf
}}</ref><ref>{{cite IETF
| rfc         = 2812
| sectionname = Summon message
| section     = 4.5
| page        = 40
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>; the optional <channel> parameter was added in <nowiki>RFC 2812</nowiki>

===TIME===
Syntax:
:<code><nowiki>TIME [<server>]</nowiki></code>

Returns the local time on the current server, or <server> if specified.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Time message
| section     = 4.3.4
| page        = 29
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===TOPIC===
Syntax:
:<code><nowiki>TOPIC <channel> [<topic>]</nowiki></code>

Allows the client to query or set the channel topic on <channel>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Topic message
| section     = 4.2.4
| pages       = 23{{ndash}} 24
| idanchor    = ietf
}}</ref> If <topic> is given, it sets the channel topic to <topic>. If channel mode +t is set, only a channel operator may set the topic.

Defined in <nowiki>RFC 1459</nowiki>

===TRACE===
Syntax:
:<code><nowiki>TRACE [<target>]</nowiki></code>

Trace a path across the IRC network to a specific server or client, in a similar method to [[traceroute]].<ref>{{cite IETF
| rfc         = 1459
| sectionname = Trace message
| section     = 4.3.6
| pages       = 30{{ndash}} 31
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===USER===
Syntax:
:<code><nowiki>USER <username> <hostname> <servername> <realname></nowiki></code> (<nowiki>RFC 1459</nowiki>)
:<code><nowiki>USER <user> <mode> <unused> <realname></nowiki></code> (<nowiki>RFC 2812</nowiki>)

This command is used at the beginning of a connection to specify the username, hostname, real name and initial user modes of the connecting client.<ref>{{cite IETF
| rfc         = 1459
| sectionname = User message
| section     = 4.1.3
| pages       = 15{{ndash}} 16
| idanchor    = ietf
}}</ref><ref>{{cite IETF
| rfc         = 2812
| sectionname = User message
| section     = 3.1.3
| page        = 11
| idanchor    = ietf
}}</ref> <realname> may contain spaces, and thus must be prefixed with a colon.

Defined in <nowiki>RFC 1459</nowiki>, modified in <nowiki>RFC 2812</nowiki>

===USERHOST===
Syntax:
:<code><nowiki>USERHOST <nickname> [<nickname> <nickname> ...]</nowiki></code>

Returns a list of information about the nicknames specified.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Userhost message
| section     = 5.7
| page        = 42
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===USERS===
Syntax:
:<code><nowiki>USERS [<server>]</nowiki></code>

Returns a list of users and information about those users in a format similar to the [[UNIX]] commands [[who (Unix)|who]], rusers and [[finger (Unix)|finger]].<ref>{{cite IETF
| rfc         = 1459
| sectionname = Users
| section     = 5.5
| pages       = 40{{ndash}} 41
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===VERSION===
Syntax:
:<code><nowiki>VERSION [<server>]</nowiki></code>

Returns the [[software version|version]] of <server>, or the current server if omitted.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Version message
| section     = 4.3.1
| pages       = 26{{ndash}} 27
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===WALLOPS===
Syntax:
:<code><nowiki>WALLOPS <message></nowiki></code>

Sends <message> to all operators connected to the server (<nowiki>RFC 1459</nowiki>), or all users with user mode 'w' set (<nowiki>RFC 2812</nowiki>).<ref>{{cite IETF
| rfc         = 1459
| sectionname = Operwall message
| section     = 5.6
| page        = 41
| idanchor    = ietf
}}</ref><ref>{{cite IETF
| rfc         = 2812
| sectionname = Operwall message
| section     = 4.7
| pages       = 41{{ndash}} 42
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>

===WHO===
Syntax:
:<code><nowiki>WHO [<name> ["o"]]</nowiki></code>

Returns a list of users who match <name>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Who query
| section     = 4.5.1
| pages       = 33{{ndash}} 34
| idanchor    = ietf
}}</ref> If the flag "o" is given, the server will only return information about IRC Operators.

Defined in <nowiki>RFC 1459</nowiki>

===WHOIS===
Syntax:
:<code><nowiki>WHOIS [<server>] <nicknames></nowiki></code>

Returns information about the comma-separated list of nicknames masks <nicknames>.<ref>{{cite IETF
| rfc         = 1459
| sectionname = Whois query
| section     = 4.5.2
| pages       = 34{{ndash}} 35
| idanchor    = ietf
}}</ref> If <server> is given, the command is forwarded to it for processing.

Defined in <nowiki>RFC 1459</nowiki>

===WHOWAS===
Syntax:
:<code><nowiki>WHOWAS <nickname> [<count> [<server>]]</nowiki></code>

Used to return information about a nickname that is no longer in use (due to client disconnection, or nickname changes).<ref>{{cite IETF
| rfc         = 1459
| sectionname = Whowas
| section     = 4.5.3
| page        = 35
| idanchor    = ietf
}}</ref> If given, the server will return information from the last <count> times the nickname has been used. If <server> is given, the command is forwarded to it for processing. In <nowiki>RFC 2812</nowiki>, <nickname> can be a comma-separated list of nicknames.<ref>{{cite IETF
| rfc         = 2812
| sectionname = Whowas
| section     = 3.6.3
| page        = 34
| idanchor    = ietf
}}</ref>

Defined in <nowiki>RFC 1459</nowiki>
